{"version":3,"sources":["Components/Block.js","Constants.js","Components/Container.js","App.js","reportWebVitals.js","index.js"],"names":["Block","props","open","onClick","id","color","Paper","className","style","backgroundColor","elevation","_data","source","selected","persist","sort","a","b","Math","random","Container","useState","data","setData","enabled","setEnabled","time","setTime","jugada1","setJugada1","jugada2","setJugada2","identificador1","setIdentificador1","winner","setWinner","useEffect","showAlert","verifyWin","win","every","item","setTimeout","changeBackground","e","jugada","success","index","findIndex","value","change","restartBlocks","forEach","Swal","fire","title","text","icon","confirmButtonText","then","result","isConfirmed","items","Grid","container","spacing","justify","map","xs","target","handleClick","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e07e237.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Block.scss';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nexport default function Block(props) {\r\n  const { open, onClick, id, color } = props;\r\n  return (\r\n    <Paper\r\n      id={id}\r\n      key={id}\r\n      onClick={onClick}\r\n      className={`block`}\r\n      style={{ backgroundColor: open ? color : 'white' }}\r\n      elevation={15} />\r\n  );\r\n}\r\n","export const _data = [\r\n    { color: \"blue\", source: \"1\", selected: false, persist: false },\r\n    { color: \"yellow\", source: \"2\", selected: false, persist: false },\r\n    { color: \"blue\", source: \"3\", selected: false, persist: false },\r\n    { color: \"yellow\", source: \"4\", selected: false, persist: false },\r\n    { color: \"yellow\", source: \"5\", selected: false, persist: false },\r\n    { color: \"green\", source: \"6\", selected: false, persist: false },\r\n    { color: \"gray\", source: \"7\", selected: false, persist: false },\r\n    { color: \"orange\", source: \"8\", selected: false, persist: false },\r\n    { color: \"pink\", source: \"9\", selected: false, persist: false },\r\n    { color: \"pink\", source: \"10\", selected: false, persist: false },\r\n    { color: \"green\", source: \"11\", selected: false, persist: false },\r\n    { color: \"gray\", source: \"12\", selected: false, persist: false }\r\n].sort((a, b) => Math.random() - 0.5);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport Block from './Block';\r\nimport { _data } from '../Constants';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport default function Container() {\r\n  const [data, setData] = useState(_data);\r\n  const [enabled, setEnabled] = useState(true);\r\n  const [time, setTime] = useState(0);\r\n  const [jugada1, setJugada1] = useState(\"\");\r\n  const [jugada2, setJugada2] = useState(\"\");\r\n  const [identificador1, setIdentificador1] = useState(\"\");\r\n  const [winner, setWinner] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (winner) {\r\n      showAlert();\r\n    }\r\n  }, [winner]);\r\n\r\n  /**\r\n   * Selection block\r\n   * @param {object} item Selected Object \r\n   */\r\n  const handleClick = (e, item) => {\r\n    if (jugada2 == e.target.id) return;\r\n    setTime(time + 1);\r\n    setJugada2(e.target.id)\r\n    if (jugada1 != \"\") {\r\n      if (identificador1 == item.color) {\r\n        changeBackground(e, item, jugada1, true);\r\n        verifyWin();\r\n      } else {\r\n        changeBackground(e, item);\r\n        setEnabled(false);\r\n        setTimeout(() => {\r\n          restartBlocks();\r\n          setEnabled(true);\r\n        }, 1000);\r\n      }\r\n      setJugada1(\"\");\r\n      setJugada2(\"\");\r\n      setIdentificador1(\"\");\r\n    } else {\r\n      changeBackground(e, item);\r\n      setJugada1(e.target.id);\r\n      setIdentificador1(item.color);\r\n    }\r\n  }\r\n  const verifyWin = () => {\r\n    const win = data.every(item => item.persist);\r\n    setTimeout(() => {\r\n      win && setWinner(true);\r\n    }, 500);\r\n  }\r\n\r\n  const changeBackground = (e, item, jugada = null, success = false) => {\r\n    let index = data.findIndex(value => value.source === item.source);\r\n    let change = [...data];\r\n    change[index].selected = !change[index].selected;\r\n    if (success) {\r\n      change[index].persist = true\r\n      change[jugada].persist = true;\r\n    }\r\n    setData(change);\r\n  }\r\n  /**\r\n   * Restart the selection \r\n   */\r\n  const restartBlocks = () => {\r\n    let change = [...data];\r\n    change.forEach(item => {\r\n      if (!item.persist) { item.selected = false }\r\n    });\r\n    setData(change);\r\n  }\r\n  /**\r\n   * Method for return cards\r\n   * @returns Cards in grid\r\n   */\r\n  const getCards = () => {\r\n    return data.map((item, index) => (\r\n      <Grid item xs={2} key={index}>\r\n        <Block id={index} color={item.color} open={item.selected} onClick={(e) => enabled && handleClick(e, item)} />\r\n      </Grid>)\r\n    )\r\n  }\r\n  const showAlert = () => {\r\n    Swal.fire({\r\n      title: 'GANASTE!',\r\n      text: 'Â¿Quieres volver a intentarlo?',\r\n      icon: 'success',\r\n      confirmButtonText: 'Reiniciar'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        const items = [...data];\r\n        items.forEach((item) => {\r\n          item.persist = false;\r\n          item.selected = false;\r\n        });\r\n        setData(items);\r\n        setTime(0);\r\n        setJugada1(\"\");\r\n        setJugada2(\"\");\r\n        setIdentificador1(\"\");\r\n        setWinner(false);\r\n      }\r\n    });\r\n  }\r\n  return (\r\n    <>\r\n      <Grid container spacing={3} justify=\"flex-end\">\r\n        <h1>Intentos: {time}</h1>\r\n      </Grid>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        {getCards()}\r\n      </Grid>\r\n    </>\r\n  );\r\n}","import './App.css';\nimport Container from './Components/Container';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}